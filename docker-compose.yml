version: '3.7'

# Define services
services:
  # App backend service
  app-server:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: app
    ports:
      - 8088:8088
    depends_on:
      - db
      - redis
    links:
      - redis
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/person?allowPublicKeyRetrieval=true&useSSL=false&createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: person
      SPRING_DATASOURCE_PASSWORD: 123
      SPRING_PROFILES_ACTIVE: prod
      REDIS_HOST: redis
      LOGSTASH_HOST : elasticsearch
    networks:
      - backend

  # Database Service (Mysql)
  db:
    image: mysql:5.7
    container_name: mysql
    ports:
      - 3306:3306
    restart: always
    environment:
      MYSQL_DATABASE: person
      MYSQL_USER: person
      MYSQL_PASSWORD: 123
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - backend

  #Redis Service
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - 6379:6379
    networks:
      - backend

  #Resid GUI
  redis-gui:
    image: erikdubbelboer/phpredisadmin
    container_name: redis-gui
    ports:
      - 6380:80
    depends_on:
      - redis
    networks:
      - backend
    environment:
      - REDIS_1_HOST=redis
      - REDIS_1_NAME=MyRedis


  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.1
    environment:
      - node.name=elasticsearch
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=elasticsearch
      - cluster.initial_master_nodes=elasticsearch
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - demo_elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
  logstash:
    build:
      context: logstash/
      args:
        ELK_VERSION: 7.8.1
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - elasticsearch
  kibana:
    image: docker.elastic.co/kibana/kibana:7.8.1
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    depends_on:
      - elasticsearch


volumes:
  db-data:
  demo_elasticsearch_data:

networks:
  backend:
  back:
    driver: bridge